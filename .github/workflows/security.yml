name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # 毎日午前3時（UTC）にセキュリティスキャンを実行
    - cron: '0 3 * * *'
  workflow_dispatch:

env:
  GO_VERSION: '1.24'
  GO111MODULE: on
  GOSECGOVERSION: go1.24.0 

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # セキュリティスキャン
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt sarif -out gosec-results.sarif ./...'
      
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec-results.sarif

      - name: Generate timeline
        uses: Kesin11/actions-timeline@v2

  # 脆弱性チェック
  vulnerability:
    name: Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Check for vulnerabilities
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
      
      - name: Check for outdated dependencies
        run: |
          go list -u -m all | grep -v "indirect" | grep "\[" || echo "No outdated dependencies found"

      - name: Generate timeline
        uses: Kesin11/actions-timeline@v2

  